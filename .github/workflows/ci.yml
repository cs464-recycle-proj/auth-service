name: Auth Service CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Make Maven wrapper executable
        run: chmod +x mvnw
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: ./mvnw clean compile -B

      - name: Run tests
        run: ./mvnw test -B -Dspring.profiles.active=test

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: auth-service-test-reports
          path: target/surefire-reports/

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      
      - name: Make Maven wrapper executable
        run: chmod +x mvnw

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run Checkstyle
        run: ./mvnw checkstyle:checkstyle || true

      - name: Run SpotBugs
        run: ./mvnw spotbugs:spotbugs || true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=cs464-recycle-proj_auth-service
            -Dsonar.organization=greenloop
            -Dsonar.host.url=https://sonarcloud.io
        continue-on-error: true

  build-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/greenloop-auth-service:latest -f ./Dockerfile .

      - name: Run container test
        run: |
          docker run -d -p 8081:8081 --name auth-test \
            -e MAIL_HOST=smtp.gmail.com \
            -e MAIL_PORT=587 \
            -e MAIL_USERNAME=fake@example.com \
            -e MAIL_PASSWORD=fakepassword \
            -e JWT_SECRET=fake-secret \
            -e JWT_ISSUER=auth-service-issuer \
            greenloop-auth-service:latest

          sleep 10
          docker logs auth-test
          docker ps | grep auth-test
          docker stop auth-test

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/greenloop-auth-service:latest

  security-scan:
    name: Security and Dependency Scanning
    runs-on: ubuntu-latest
    needs: build-docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Trivy for Docker image scanning
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/greenloop-auth-service:latest
          format: table
          exit-code: 0
          vuln-type: os,library
          severity: CRITICAL,HIGH

      - name: Dependency vulnerability check
        run: ./mvnw org.owasp:dependency-check-maven:check
